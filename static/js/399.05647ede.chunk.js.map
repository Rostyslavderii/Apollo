{"version":3,"file":"static/js/399.05647ede.chunk.js","mappings":"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","sources":["apollo/apolloAPI.jsx","components/CardsSection/CardsSlider/CardsSlider.styled.jsx","components/HeroBanner/HeroSaction.styled.jsx","components/FavoriteBanner/FavoriteBanner.styled.jsx","components/FavoriteBanner/FavoriteBanner.jsx","components/FavoritesCards/CardItem/TrashCanButton.styled.jsx","components/FavoritesCards/CardItem/TrashCanButton.jsx","components/FavoritesCards/CardItem/ClearButton.styled.jsx","components/FavoritesCards/CardItem/ClearButton.jsx","components/FavoritesCards/FavoritesCards.jsx","pages/FavoritePage/FavoritePage.jsx"],"sourcesContent":["import { gql } from '@apollo/client';\n\nexport const GET_ALL_ROCKETS = gql`\n  query RocketsQuery {\n    rockets {\n      id\n      description\n      name\n    }\n  }\n`;\n\nexport const GET_ROCKET = gql`\n  query GetRocket($rocketId: ID!) {\n    rocket(id: $rocketId) {\n      id\n      description\n      name\n    }\n  }\n`;\n\nexport const GET_ROCKET_ITEMS = gql`\n  query LocalRocket {\n    cartItems @client\n  }\n`;\n\nexport const ADD_ROCKET = gql`\n  mutation AddRocket($rocketId: ID!) {\n    addTodo(id: $rocketId) {\n      id\n      description\n      name\n    }\n  }\n`;\nexport const ADD_ROCKET2 = gql`\n  mutation RocketAdd2($objects: [users_insert_input!]!) {\n    insert_users(objects: $objects) {\n      returning {\n        id\n        name\n        rocket\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\n\n//CardsSlider\nexport const CardsContainer = styled.div`\n  margin-left: 80px;\n  margin-right: 80px;\n  margin-bottom: 96px;\n  width: 1286px;\n  height: 720px;\n\n  div {\n    .swiper-pagination {\n      display: flex;\n      justify-content: center;\n      position: absolute;\n      text-align: center;\n      transition: 300ms opacity;\n      transform: translate3d(0, 0, 0);\n      z-index: 10;\n    }\n\n    .swiper-pagination-fraction,\n    .swiper-pagination-custom,\n    .swiper-horizontal > .swiper-pagination-bullets,\n    .swiper-pagination-bullets.swiper-pagination-horizontal {\n      bottom: 20px;\n      top: var(--swiper-pagination-top, auto);\n      left: 0;\n      width: 100%;\n    }\n\n    span.swiper-pagination-bullet-active {\n      opacity: 1;\n      animation: scale 0.5s;\n\n      &::after {\n        content: '';\n        position: absolute;\n        top: 50%;\n        transform: translateY(-50%);\n        border-radius: 50%;\n      }\n      &::after {\n        left: -8px;\n        height: 24px;\n        width: 24px;\n        border: 2px solid black;\n        box-shadow: 0px 0px 6px 1px black;\n        opacity: 1;\n      }\n    }\n\n    span {\n      position: relative;\n      margin-right: 27px;\n      display: block;\n      color: #000;\n      cursor: pointer;\n      transition: color 0.5s;\n      &::before,\n      &::after {\n        content: '';\n        position: absolute;\n        top: 50%;\n        transform: translateY(-50%);\n        border-radius: 50%;\n      }\n\n      &::before {\n        left: 0;\n        width: 12px;\n        height: 12px;\n        background-color: black;\n      }\n\n      &::after {\n        left: -8px;\n        height: 24px;\n        width: 24px;\n        border: 2px solid black;\n        box-shadow: 0px 0px 6px 1px black;\n        opacity: 0;\n      }\n\n      &:hover,\n      &:focus {\n        &::after {\n          opacity: 1;\n          animation: scale;\n        }\n      }\n\n      @keyframes scale {\n        0% {\n          transform: translateY(-50%) scale(1.5);\n        }\n        50% {\n          transform: translateY(-50%) scale(0.5);\n        }\n        110% {\n          transform: translateY(-50%) scale(1);\n        }\n      }\n    }\n  }\n`;\n\nexport const CardsItemContainer = styled.div`\n  width: 411px;\n  height: 296px;\n`;\n\nexport const CardImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: top;\n`;\n\n//CardText\nexport const CardTextContainer = styled.div`\n  width: 411px;\n  height: 103px;\n  overflow: hidden;\n  padding-top: 32px;\n`;\n\nexport const CardName = styled.h1`\n  font-family: 'Syne';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 29px;\n  text-align: center;\n  align-items: center;\n  text-transform: uppercase;\n  padding: 0px 32px 0px 32px;\n`;\n\nexport const CardText = styled.p`\n  font-family: 'Lato';\n  font-style: normal;\n  font-weight: 300;\n  font-size: 24px;\n  line-height: 29px;\n  align-items: center;\n  text-align: center;\n  padding: 16px 32px 0px 32px;\n  height: 58px;\n`;\n\n//CardsTopic\nexport const CardsTopic = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 43px;\n`;\nexport const CardsH1 = styled.h1`\n  font-family: syne;\n  font-weight: 800;\n  font-size: 32px;\n  line-height: 38px;\n  text-transform: uppercase;\n`;\n//CardsArrows\nexport const CardsArrows = styled.div`\n  width: 104px;\n  height: 44px;\n`;\n\nexport const ArrowButton = styled.button`\n  width: 44px;\n  height: 44px;\n  &:first-child {\n    margin-right: 16px;\n  }\n  svg {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\n//ButtomList BUY\nexport const ButtomList = styled.div`\n  padding: 64px 32px 24px 32px;\n  display: flex;\n  justify-content: space-between;\n  align-content: center;\n`;\nexport const CardButton = styled.button`\n  width: 278px;\n  padding: 12px 0px;\n  font-family: 'Syne';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 29px;\n  text-transform: uppercase;\n  text-align: center;\n  background-color: ${p => p.theme.colors.bottons};\n  transition: all 0.3s;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n  &.active {\n    font-weight: 900;\n  }\n`;\n\n//CardsButtonsBlack\nexport const Sp = styled.span`\n  position: relative;\n  margin-right: 24px;\n  display: block;\n  color: #000;\n  cursor: pointer;\n  transition: color 0.5s;\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    border-radius: 50%;\n  }\n\n  &::before {\n    left: 0;\n    width: 12px;\n    height: 12px;\n    background-color: black;\n  }\n\n  &::after {\n    left: -8px;\n    height: 24px;\n    width: 24px;\n    border: 2px solid black;\n    box-shadow: 0px 0px 6px 1px black;\n    opacity: 0;\n  }\n\n  &:hover,\n  &:focus {\n    &::after {\n      opacity: 1;\n      animation: scale;\n    }\n  }\n\n  @keyframes scale {\n    0% {\n      transform: translateY(-50%) scale(1.5);\n    }\n    50% {\n      transform: translateY(-50%) scale(0.5);\n    }\n    110% {\n      transform: translateY(-50%) scale(1);\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { HashLink } from 'react-router-hash-link';\n\nexport const Banner = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\n//BannerText\nexport const BannerText = styled.div`\n  position: absolute;\n  margin-left: 167px;\n  margin-right: 151px;\n`;\nexport const H1 = styled.h1`\n  text-transform: uppercase;\n  color: white;\n  font-family: Syne;\n  font-weight: 800;\n  font-size: 48px;\n  line-height: 58px;\n`;\n\nexport const Big = styled.h1`\n  font-size: 310px;\n  line-height: 277px;\n  font-weight: 900;\n`;\n// //ArrowButton\nexport const ArrowDiv = styled.div`\n  position: absolute;\n  top: 90%;\n`;\nexport const ArrowLink = styled(HashLink)`\n  text-decoration: none;\n`;\n\nexport const ArrowButton = styled.button`\n  cursor: pointer;\n  background-color: transparent;\n  display: flex;\n  align-items: center;\n  transition: all 0.3s;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n`;\nexport const ArrowImg = styled.img``;\n\nexport const Text = styled.p`\n  text-transform: capitalize;\n  font-family: Lato;\n  font-style: normal;\n  font-weight: 300;\n  font-size: 32px;\n  line-height: 38px;\n  color: white;\n\n  text-shadow: -1px 1px 0 #000, 1px 1px 0 #000, 1px -1px 0 #000,\n    -1px -1px 0 #000;\n  margin-right: 8px;\n`;\n\n//Slider\nexport const List = styled.ul`\n  position: relative;\n`;\nexport const Item = styled.li`\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  position: absolute;\n  opacity: ${props => (props.slide ? 1 : 0)};\n  transition: opacity ease-in-out 0.4s;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  position: absolute;\n`;\n\nexport const Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  @media screen and (min-width: 480px) {\n  }\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\n//radio\n\nexport const RadioWraper = styled.div`\n  justify-content: center;\n  display: flex;\n  align-items: end;\n  height: 100vh;\n`;\nexport const FormCtrl = styled.form`\n  position: absolute;\n  z-index: 3;\n`;\nexport const RadioButtonsDiv = styled.div`\n  position: absolute;\n  z-index: 10;\n`;\n\nexport const LabelsCtrl = styled.div`\n  &:not(:last-child) {\n    margin-right: 8px;\n  }\n  position: absolute;\n  display: flex;\n  left: -64px;\n  top: 29px;\n`;\n\nexport const Sp = styled.label`\n  position: relative;\n  margin-right: 27px;\n  display: block;\n  color: #fff;\n  cursor: pointer;\n  transition: color 0.5s;\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    border-radius: 50%;\n  }\n\n  &::before {\n    left: 0;\n    width: 12px;\n    height: 12px;\n    background-color: white;\n  }\n\n  &::after {\n    left: -8px;\n    height: 24px;\n    width: 24px;\n    border: 2px solid white;\n    box-shadow: 0px 0px 6px 1px white;\n    opacity: 0;\n  }\n\n  &:hover,\n  &:focus {\n    &::after {\n      opacity: 1;\n      animation: scale;\n    }\n  }\n\n  &.slide {\n    opacity: 1;\n    animation: scale 0.5s;\n\n    &::after {\n      content: '';\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      border-radius: 50%;\n    }\n    &::after {\n      left: -8px;\n      height: 24px;\n      width: 24px;\n      border: 2px solid white;\n      box-shadow: 0px 0px 6px 1px white;\n      opacity: 1;\n    }\n  }\n\n  @keyframes scale {\n    0% {\n      transform: translateY(-50%) scale(1.5);\n    }\n    50% {\n      transform: translateY(-50%) scale(0.5);\n    }\n    110% {\n      transform: translateY(-50%) scale(1);\n    }\n  }\n`;\n\nexport const UInput = styled.input`\n  display: none;\n  opacity: 0;\n  visibility: hidden;\n\n  width: 24px;\n  height: 24px;\n\n  &:checked {\n    ~ {\n      ${Sp} {\n        color: gold;\n        &::after {\n          opacity: 1;\n          animation: scale;\n        }\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const FavoriteContainer = styled.div`\n  background-image: url(Banner/image.png);\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  width: 100vw;\n  height: 50vh;\n`;\n","import {\n  Banner,\n  H1,\n  BannerText,\n} from 'components/HeroBanner/HeroSaction.styled';\nimport { FavoriteContainer } from './FavoriteBanner.styled';\n\nexport const FavoriteBanner = () => {\n  return (\n    <>\n      <Banner>\n        <FavoriteContainer />\n        <BannerText>\n          <H1>Favorites</H1>\n        </BannerText>\n      </Banner>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const TrashLink = styled(Link)`\n  text-decoration: none;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 53px;\n  height: 53px;\n  background-color: ${p => p.theme.colors.arrows};\n  transition: all 0.3s;\n  color: black;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    color: white;\n    background-color: ${p => p.theme.colors.accent};\n    svg {\n      fill: ${p => p.theme.colors.mainText};\n    }\n  }\n  svg {\n    text-decoration: none;\n    fill: ${p => p.theme.colors.black};\n    width: 24px;\n    height: 24px;\n  }\n`;\n","import { CgTrashEmpty } from 'react-icons/cg';\nimport { TrashLink } from './TrashCanButton.styled';\nimport { cartItemsVar } from 'apollo/cache';\nimport { useReactiveVar } from '@apollo/client';\nimport { useEffect } from 'react';\nimport { useApolloClient } from '@apollo/client';\nimport { GET_ROCKET_ITEMS } from 'apollo/apolloAPI';\n\nexport const TrashCanButton = ({ id, description, name, index, data }) => {\n  const cartItems = useReactiveVar(cartItemsVar);\n  const client = useApolloClient();\n\n  useEffect(() => {}, [cartItems]);\n\n  // const handleDelete = id => {\n  //   const newCartItems = data.cartItems.filter(item => item.id !== id);\n  //   console.log(newCartItems, 'new');\n  //   client.writeQuery({\n  //     query: GET_ROCKET_ITEMS,\n  //     data: { cartItems: newCartItems },\n  //   });\n  // };\n\n  function clearLine({ index }) {\n    const Cards = cartItems;\n    const newCartItems = Cards.splice(index, 1);\n    client.writeQuery({\n      query: GET_ROCKET_ITEMS,\n      data: { cartItems: newCartItems },\n    });\n  }\n\n  return (\n    <>\n      <TrashLink onClick={() => clearLine({ index })}>\n        <CgTrashEmpty alt=\"TrashCanButton\" />\n      </TrashLink>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ClearAll = styled.div`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  text-align: center;\n`;\nexport const Text = styled.p`\n  text-transform: capitalize;\n  font-family: Lato;\n  font-weight: 300;\n  font-size: 24px;\n  line-height: 29px;\n  color: #556b84;\n`;\n","import { ClearAll, Text } from './ClearButton.styled';\nimport { cartItemsVar } from 'apollo/cache';\nimport { useReactiveVar } from '@apollo/client';\nimport { useApolloClient } from '@apollo/client';\nimport { GET_ROCKET_ITEMS } from 'apollo/apolloAPI';\n\nexport const ClearButton = () => {\n  const cartItems = useReactiveVar(cartItemsVar);\n  const client = useApolloClient();\n\n  function clearLine() {\n    const Cards = cartItems;\n    const newCartItems = Cards.splice(0, cartItems.length);\n    client.writeQuery({\n      query: GET_ROCKET_ITEMS,\n      data: { cartItems: newCartItems },\n    });\n  }\n\n  return (\n    <>\n      <ClearAll onClick={() => clearLine()}>\n        <Text>clear all</Text>\n      </ClearAll>\n    </>\n  );\n};\n","import { FavoriteCard } from './CardItem/FavoriteItem';\nimport { TrashCanButton } from 'components/FavoritesCards/CardItem/TrashCanButton';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, { Navigation, Pagination } from 'swiper';\nimport { useApolloClient, useQuery } from '@apollo/client';\nimport { cartItemsVar } from 'apollo/cache';\nimport * as ReactDOMServer from 'react-dom/server';\nimport { ClearButton } from 'components/FavoritesCards/CardItem/ClearButton';\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\nimport {\n  CardsTopic,\n  CardsArrows,\n  ArrowButton,\n  CardsContainer,\n  CardsItemContainer,\n  CardImg,\n  CardTextContainer,\n  CardName,\n  CardText,\n  ButtomList,\n  CardButton,\n} from '../CardsSection/CardsSlider/CardsSlider.styled';\n\nimport 'swiper/css';\nimport 'swiper/less/navigation';\nimport 'swiper/less/pagination';\n\nimport Images from 'apollo/Images.json';\nimport { useReactiveVar } from '@apollo/client';\nimport { useEffect } from 'react';\n//import { useLazyQuery } from '@apollo/client';\nimport { GET_ROCKET_ITEMS } from 'apollo/apolloAPI';\n\nexport const FavoritesCards = ({ favorites, setFavorites }) => {\n  const client = useApolloClient();\n\n  const { data, loading, error } = useQuery(GET_ROCKET_ITEMS);\n\n  // const rocketId = '5e9d0d95eda69955f709d1eb';\n\n  // const { data, loading, error } = useQuery(GET_ROCKET, {\n  //   variables: { rocketId: rocketId },\n  // });\n\n  const cartItems = useReactiveVar(cartItemsVar);\n\n  useEffect(() => {\n    //   // async function addToRocket(rocketId) {\n    //   //   const { data } = await client.readQuery({\n    //   //     query: GET_ROCKET,\n    //   //     variables: {\n    //   //       rocketId,\n    //   //     },\n    //   //   });\n    //   //   console.log(data, 'data');\n    //   // }\n    //   // addToRocket(rocketId);\n    console.log(cartItems, 'makeVar');\n  }, [cartItems]);\n\n  // const { card } = useContext(cardContext);\n  // useEffect(() => {\n  //   console.log(card, 'FavoritePage');\n  // }, [card]);\n\n  //const local = localStorage.getItem('');\n\n  const Icons = Images.map(image => image.icon);\n  SwiperCore.use([Navigation, Pagination]);\n\n  return (\n    <>\n      {/* {cartItems.map(cardId => {\n        const cardById = data.rocket.find(elem => elem.id === cardId); // filter\n      })} */}\n      <section>\n        <CardsContainer>\n          <CardsTopic\n            style={{\n              'margin-top': '64px',\n            }}\n          >\n            <CardsArrows>\n              <ArrowButton className=\"swiper-button-prev\">\n                <IoIosArrowBack />\n              </ArrowButton>\n              <ArrowButton className=\"swiper-button-next\">\n                <IoIosArrowForward />\n              </ArrowButton>\n            </CardsArrows>\n            <ClearButton />\n          </CardsTopic>\n          <Swiper\n            style={{\n              'padding-bottom': '60px',\n            }}\n            slidesPerView={3}\n            spaceBetween={24}\n            navigation={{\n              nextEl: '.swiper-button-next',\n              prevEl: '.swiper-button-prev',\n            }}\n            pagination={{\n              clickable: true,\n              renderBullet: function (index, className) {\n                return ReactDOMServer.renderToStaticMarkup(\n                  <span className={className}></span>\n                );\n              },\n            }}\n            modules={[Navigation, Pagination]}\n            className=\"mySwiper\"\n          >\n            {data?.cartItems.map(({ id, name, description }, index) => {\n              // return (\n              //   <FavoriteCard\n              //     id={id}\n              //     name={name}\n              //     description={description}\n              //     index={index}\n              //   />\n              // );\n              return (\n                <SwiperSlide\n                  key={id}\n                  style={{\n                    border: '1px solid #d3eaff',\n                    'max-width': '411px',\n                  }}\n                >\n                  <CardsItemContainer>\n                    <CardImg\n                      src={process.env.PUBLIC_URL + Icons[index]}\n                      alt={description}\n                    />\n                  </CardsItemContainer>\n                  <CardTextContainer>\n                    <CardName>{name}</CardName>\n                    <CardText>{description}</CardText>\n                  </CardTextContainer>\n                  <ButtomList>\n                    <CardButton\n                      type=\"button\"\n                      onClick={() => setFavorites(favorite => [...favorite, 1])}\n                    >\n                      buy\n                    </CardButton>\n                    <TrashCanButton\n                      id={id}\n                      index={index}\n                      name={name}\n                      description={description}\n                      data={data}\n                    />\n                  </ButtomList>\n                </SwiperSlide>\n              );\n            })}\n          </Swiper>\n        </CardsContainer>\n      </section>\n    </>\n  );\n};\n","import { FavoriteBanner } from 'components/FavoriteBanner/FavoriteBanner';\nimport { FavoritesCards } from 'components/FavoritesCards/FavoritesCards';\n\nconst FavoritePage = ({ favorites, setFavorites }) => {\n  return (\n    <>\n      <FavoriteBanner />\n      <FavoritesCards favorites={favorites} setFavorites={setFavorites} />\n    </>\n  );\n};\n\nexport default FavoritePage;\n"],"names":["GET_ALL_ROCKETS","gql","GET_ROCKET","GET_ROCKET_ITEMS","CardsContainer","styled","CardsItemContainer","CardImg","CardTextContainer","CardName","CardText","CardsTopic","CardsH1","CardsArrows","ArrowButton","ButtomList","CardButton","p","theme","colors","bottons","Banner","BannerText","H1","Big","ArrowDiv","ArrowLink","HashLink","ArrowImg","Text","List","Item","props","slide","Image","Container","RadioButtonsDiv","LabelsCtrl","Sp","FavoriteContainer","FavoriteBanner","TrashLink","Link","arrows","accent","mainText","black","TrashCanButton","id","description","name","index","cartItems","data","useReactiveVar","cartItemsVar","client","useApolloClient","useEffect","onClick","newCartItems","splice","writeQuery","query","clearLine","alt","ClearAll","ClearButton","length","FavoritesCards","favorites","setFavorites","useQuery","loading","error","console","log","Icons","Images","image","icon","SwiperCore","Navigation","Pagination","style","className","slidesPerView","spaceBetween","navigation","nextEl","prevEl","pagination","clickable","renderBullet","ReactDOMServer","modules","map","border","src","process","type","favorite"],"sourceRoot":""}
{"version":3,"file":"static/js/679.821c465e.chunk.js","mappings":"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","sources":["components/CardsSection/CardsSlider/CardsSlider.styled.jsx","components/HeroBanner/HeroSaction.styled.jsx","components/CardsSection/CardsSection.styled.jsx","components/HeartButton/HeartButtonLink.styled.jsx","../node_modules/@apollo/src/react/hooks/useLazyQuery.ts","components/HeartButton/HeartButtonLink.jsx","components/CardsSection/CardsSlider/CardsSlider.jsx","components/CardsSection/CardsSection.jsx","images/icons/ArrowDown.svg","components/HeroBanner/SliderContent/ArrowTours.jsx","components/HeroBanner/SliderContent/SliderContent.jsx","components/HeroBanner/HeroSection.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n//CardsSlider\nexport const CardsContainer = styled.div`\n  margin-left: 80px;\n  margin-right: 80px;\n  margin-bottom: 96px;\n  width: 1286px;\n  height: 720px;\n\n  div {\n    .swiper-pagination {\n      display: flex;\n      justify-content: center;\n      position: absolute;\n      text-align: center;\n      transition: 300ms opacity;\n      transform: translate3d(0, 0, 0);\n      z-index: 10;\n    }\n\n    .swiper-pagination-fraction,\n    .swiper-pagination-custom,\n    .swiper-horizontal > .swiper-pagination-bullets,\n    .swiper-pagination-bullets.swiper-pagination-horizontal {\n      bottom: 20px;\n      top: var(--swiper-pagination-top, auto);\n      left: 0;\n      width: 100%;\n    }\n\n    span.swiper-pagination-bullet-active {\n      opacity: 1;\n      animation: scale 0.5s;\n\n      &::after {\n        content: '';\n        position: absolute;\n        top: 50%;\n        transform: translateY(-50%);\n        border-radius: 50%;\n      }\n      &::after {\n        left: -8px;\n        height: 24px;\n        width: 24px;\n        border: 2px solid black;\n        box-shadow: 0px 0px 6px 1px black;\n        opacity: 1;\n      }\n    }\n\n    span {\n      position: relative;\n      margin-right: 27px;\n      display: block;\n      color: #000;\n      cursor: pointer;\n      transition: color 0.5s;\n      &::before,\n      &::after {\n        content: '';\n        position: absolute;\n        top: 50%;\n        transform: translateY(-50%);\n        border-radius: 50%;\n      }\n\n      &::before {\n        left: 0;\n        width: 12px;\n        height: 12px;\n        background-color: black;\n      }\n\n      &::after {\n        left: -8px;\n        height: 24px;\n        width: 24px;\n        border: 2px solid black;\n        box-shadow: 0px 0px 6px 1px black;\n        opacity: 0;\n      }\n\n      &:hover,\n      &:focus {\n        &::after {\n          opacity: 1;\n          animation: scale;\n        }\n      }\n\n      @keyframes scale {\n        0% {\n          transform: translateY(-50%) scale(1.5);\n        }\n        50% {\n          transform: translateY(-50%) scale(0.5);\n        }\n        110% {\n          transform: translateY(-50%) scale(1);\n        }\n      }\n    }\n  }\n`;\n\nexport const CardsItemContainer = styled.div`\n  width: 411px;\n  height: 296px;\n`;\n\nexport const CardImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: top;\n`;\n\n//CardText\nexport const CardTextContainer = styled.div`\n  width: 411px;\n  height: 103px;\n  overflow: hidden;\n  padding-top: 32px;\n`;\n\nexport const CardName = styled.h1`\n  font-family: 'Syne';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 29px;\n  text-align: center;\n  align-items: center;\n  text-transform: uppercase;\n  padding: 0px 32px 0px 32px;\n`;\n\nexport const CardText = styled.p`\n  font-family: 'Lato';\n  font-style: normal;\n  font-weight: 300;\n  font-size: 24px;\n  line-height: 29px;\n  align-items: center;\n  text-align: center;\n  padding: 16px 32px 0px 32px;\n  height: 58px;\n`;\n\n//CardsTopic\nexport const CardsTopic = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: 43px;\n`;\nexport const CardsH1 = styled.h1`\n  font-family: syne;\n  font-weight: 800;\n  font-size: 32px;\n  line-height: 38px;\n  text-transform: uppercase;\n`;\n//CardsArrows\nexport const CardsArrows = styled.div`\n  width: 104px;\n  height: 44px;\n`;\n\nexport const ArrowButton = styled.button`\n  width: 44px;\n  height: 44px;\n  &:first-child {\n    margin-right: 16px;\n  }\n  svg {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\n//ButtomList BUY\nexport const ButtomList = styled.div`\n  padding: 64px 32px 24px 32px;\n  display: flex;\n  justify-content: space-between;\n  align-content: center;\n`;\nexport const CardButton = styled.button`\n  width: 278px;\n  padding: 12px 0px;\n  font-family: 'Syne';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 29px;\n  text-transform: uppercase;\n  text-align: center;\n  background-color: ${p => p.theme.colors.bottons};\n  transition: all 0.3s;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n  &.active {\n    font-weight: 900;\n  }\n`;\n\n//CardsButtonsBlack\nexport const Sp = styled.span`\n  position: relative;\n  margin-right: 24px;\n  display: block;\n  color: #000;\n  cursor: pointer;\n  transition: color 0.5s;\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    border-radius: 50%;\n  }\n\n  &::before {\n    left: 0;\n    width: 12px;\n    height: 12px;\n    background-color: black;\n  }\n\n  &::after {\n    left: -8px;\n    height: 24px;\n    width: 24px;\n    border: 2px solid black;\n    box-shadow: 0px 0px 6px 1px black;\n    opacity: 0;\n  }\n\n  &:hover,\n  &:focus {\n    &::after {\n      opacity: 1;\n      animation: scale;\n    }\n  }\n\n  @keyframes scale {\n    0% {\n      transform: translateY(-50%) scale(1.5);\n    }\n    50% {\n      transform: translateY(-50%) scale(0.5);\n    }\n    110% {\n      transform: translateY(-50%) scale(1);\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { HashLink } from 'react-router-hash-link';\n\nexport const Banner = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\n//BannerText\nexport const BannerText = styled.div`\n  position: absolute;\n  margin-left: 167px;\n  margin-right: 151px;\n`;\nexport const H1 = styled.h1`\n  text-transform: uppercase;\n  color: white;\n  font-family: Syne;\n  font-weight: 800;\n  font-size: 48px;\n  line-height: 58px;\n`;\n\nexport const Big = styled.h1`\n  font-size: 310px;\n  line-height: 277px;\n  font-weight: 900;\n`;\n// //ArrowButton\nexport const ArrowDiv = styled.div`\n  position: absolute;\n  top: 90%;\n`;\nexport const ArrowLink = styled(HashLink)`\n  text-decoration: none;\n`;\n\nexport const ArrowButton = styled.button`\n  cursor: pointer;\n  background-color: transparent;\n  display: flex;\n  align-items: center;\n  transition: all 0.3s;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n`;\nexport const ArrowImg = styled.img``;\n\nexport const Text = styled.p`\n  text-transform: capitalize;\n  font-family: Lato;\n  font-style: normal;\n  font-weight: 300;\n  font-size: 32px;\n  line-height: 38px;\n  color: white;\n\n  text-shadow: -1px 1px 0 #000, 1px 1px 0 #000, 1px -1px 0 #000,\n    -1px -1px 0 #000;\n  margin-right: 8px;\n`;\n\n//Slider\nexport const List = styled.ul`\n  position: relative;\n`;\nexport const Item = styled.li`\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  position: absolute;\n  opacity: ${props => (props.slide ? 1 : 0)};\n  transition: opacity ease-in-out 0.4s;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  position: absolute;\n`;\n\nexport const Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  @media screen and (min-width: 480px) {\n  }\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\n//radio\n\nexport const RadioWraper = styled.div`\n  justify-content: center;\n  display: flex;\n  align-items: end;\n  height: 100vh;\n`;\nexport const FormCtrl = styled.form`\n  position: absolute;\n  z-index: 3;\n`;\nexport const RadioButtonsDiv = styled.div`\n  position: absolute;\n  z-index: 10;\n`;\n\nexport const LabelsCtrl = styled.div`\n  &:not(:last-child) {\n    margin-right: 8px;\n  }\n  position: absolute;\n  display: flex;\n  left: -64px;\n  top: 29px;\n`;\n\nexport const Sp = styled.label`\n  position: relative;\n  margin-right: 27px;\n  display: block;\n  color: #fff;\n  cursor: pointer;\n  transition: color 0.5s;\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    border-radius: 50%;\n  }\n\n  &::before {\n    left: 0;\n    width: 12px;\n    height: 12px;\n    background-color: white;\n  }\n\n  &::after {\n    left: -8px;\n    height: 24px;\n    width: 24px;\n    border: 2px solid white;\n    box-shadow: 0px 0px 6px 1px white;\n    opacity: 0;\n  }\n\n  &:hover,\n  &:focus {\n    &::after {\n      opacity: 1;\n      animation: scale;\n    }\n  }\n\n  &.slide {\n    opacity: 1;\n    animation: scale 0.5s;\n\n    &::after {\n      content: '';\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      border-radius: 50%;\n    }\n    &::after {\n      left: -8px;\n      height: 24px;\n      width: 24px;\n      border: 2px solid white;\n      box-shadow: 0px 0px 6px 1px white;\n      opacity: 1;\n    }\n  }\n\n  @keyframes scale {\n    0% {\n      transform: translateY(-50%) scale(1.5);\n    }\n    50% {\n      transform: translateY(-50%) scale(0.5);\n    }\n    110% {\n      transform: translateY(-50%) scale(1);\n    }\n  }\n`;\n\nexport const UInput = styled.input`\n  display: none;\n  opacity: 0;\n  visibility: hidden;\n\n  width: 24px;\n  height: 24px;\n\n  &:checked {\n    ~ {\n      ${Sp} {\n        color: gold;\n        &::after {\n          opacity: 1;\n          animation: scale;\n        }\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\r\n\r\nexport const CardsSctn = styled.section`\r\n  padding-top: 96px;\r\n`;\r\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const FavoriteLink = styled(Link)`\n  text-decoration: none;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: 53px;\n  height: 53px;\n  background-color: ${p => p.theme.colors.arrows};\n  transition: all 0.3s;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n\n    background-color: ${p => p.theme.colors.accent};\n    svg {\n      fill: ${p => p.theme.colors.mainText};\n    }\n  }\n  svg {\n    fill: ${p => p.theme.colors.black};\n    width: 24px;\n    height: 24px;\n  }\n`;\n","import { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\nimport { useCallback, useEffect, useMemo, useRef } from 'react';\n\nimport { OperationVariables } from '../../core';\nimport { mergeOptions } from '../../utilities';\nimport {\n  LazyQueryHookOptions,\n  LazyQueryResultTuple,\n  QueryResult,\n} from '../types/types';\nimport { useInternalState } from './useQuery';\nimport { useApolloClient } from './useApolloClient';\n\n// The following methods, when called will execute the query, regardless of\n// whether the useLazyQuery execute function was called before.\nconst EAGER_METHODS = [\n  'refetch',\n  'reobserve',\n  'fetchMore',\n  'updateQuery',\n  'startPolling',\n  'subscribeToMore',\n] as const;\n\nexport function useLazyQuery<TData = any, TVariables extends OperationVariables = OperationVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: LazyQueryHookOptions<TData, TVariables>\n): LazyQueryResultTuple<TData, TVariables> {\n  const abortControllersRef = useRef(new Set<AbortController>());\n\n  const execOptionsRef = useRef<Partial<LazyQueryHookOptions<TData, TVariables>>>();\n  const merged = execOptionsRef.current ? mergeOptions(options, execOptionsRef.current) : options;\n\n  const internalState = useInternalState<TData, TVariables>(\n    useApolloClient(options && options.client),\n    merged?.query ?? query\n  );\n\n  const useQueryResult = internalState.useQuery({\n    ...merged,\n    skip: !execOptionsRef.current,\n  });\n\n  const initialFetchPolicy =\n    useQueryResult.observable.options.initialFetchPolicy ||\n    internalState.getDefaultFetchPolicy();\n\n  const result: QueryResult<TData, TVariables> =\n    Object.assign(useQueryResult, {\n      called: !!execOptionsRef.current,\n    });\n\n  // We use useMemo here to make sure the eager methods have a stable identity.\n  const eagerMethods = useMemo(() => {\n    const eagerMethods: Record<string, any> = {};\n    for (const key of EAGER_METHODS) {\n      const method = result[key];\n      eagerMethods[key] = function () {\n        if (!execOptionsRef.current) {\n          execOptionsRef.current = Object.create(null);\n          // Only the first time populating execOptionsRef.current matters here.\n          internalState.forceUpdate();\n        }\n        return method.apply(this, arguments);\n      };\n    }\n\n    return eagerMethods;\n  }, []);\n\n  Object.assign(result, eagerMethods);\n\n  useEffect(() => {\n    return () => {\n      abortControllersRef.current.forEach((controller) => {\n        controller.abort();\n      });\n    }\n  }, [])\n\n  const execute = useCallback<\n    LazyQueryResultTuple<TData, TVariables>[0]\n  >(executeOptions => {\n    const controller = new AbortController();\n    abortControllersRef.current.add(controller);\n\n    execOptionsRef.current = executeOptions ? {\n      ...executeOptions,\n      fetchPolicy: executeOptions.fetchPolicy || initialFetchPolicy,\n    } : {\n      fetchPolicy: initialFetchPolicy,\n    };\n\n    const promise = internalState\n      .asyncUpdate(controller.signal) // Like internalState.forceUpdate, but returns a Promise.\n      .then(queryResult => {\n        abortControllersRef.current.delete(controller);\n\n        return Object.assign(queryResult, eagerMethods);\n      });\n\n    promise.catch(() => {\n      abortControllersRef.current.delete(controller);\n    });\n\n    return promise;\n  }, []);\n\n  return [execute, result];\n}\n","import { BiHeart } from 'react-icons/bi';\nimport { FavoriteLink } from './HeartButtonLink.styled';\nimport { cartItemsVar } from 'apollo/cache';\nimport { useLazyQuery } from '@apollo/client';\nimport { GET_ROCKET, GET_ROCKET_ITEMS } from 'apollo/apolloAPI';\n\nimport { useReactiveVar, useApolloClient } from '@apollo/client';\nimport { useContext } from 'react';\nimport { cardContext } from 'apollo/useContext';\n\nimport { useNavigation } from 'react-router';\n\nexport const HeartButtonLink = ({ id, description, name }) => {\n  const client = useApolloClient();\n  const navigation = useNavigation();\n\n  const [GetRocket, { data, loading, error }] = useLazyQuery(GET_ROCKET, {\n    variables: { rocketId: id },\n  });\n  const { getCard, card } = useContext(cardContext);\n  // console.log(card, 'context');\n\n  function cards(rocket) {\n    cartItemsVar([...cartItemsVar(), rocket]);\n    getCard(rocket);\n  }\n\n  async function addToRocket(rocketId) {\n    cartItemsVar([...cartItemsVar(), rocketId]);\n    const { data } = await client.query({\n      query: GET_ROCKET,\n      variables: {\n        rocketId,\n      },\n    });\n  }\n\n  return (\n    <>\n      <FavoriteLink onClick={() => cards({ id, description, name })}>\n        <BiHeart alt=\"FavoriteHeart\" />\n      </FavoriteLink>\n    </>\n  );\n};\n","import { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\nimport { HeartButtonLink } from 'components/HeartButton/HeartButtonLink';\nimport {\n  CardsItemContainer,\n  CardImg,\n  CardsContainer,\n  CardTextContainer,\n  CardName,\n  CardText,\n  CardsTopic,\n  CardsH1,\n  CardsArrows,\n  ArrowButton,\n  ButtomList,\n  CardButton,\n} from './CardsSlider.styled';\n//ApolloApi\nimport { GET_ALL_ROCKETS } from '../../../apollo/apolloAPI';\nimport { useQuery } from '@apollo/client';\nimport { NetworkStatus } from '@apollo/client';\nimport Images from '../../../apollo/Images.json';\nimport * as ReactDOMServer from 'react-dom/server';\n//swiper\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, { Pagination, Navigation } from 'swiper';\nimport 'swiper/css';\nimport 'swiper/less/navigation';\nimport 'swiper/less/pagination';\n\nexport const CardsSlider = ({ favorites, setFavorites }) => {\n  const { loading, error, data, refetch, networkStatus } = useQuery(\n    GET_ALL_ROCKETS,\n    {\n      fetchPolicy: 'network-only',\n      // nextFetchPolicy: 'cache-first',\n      notifyOnNetworkStatusChange: true,\n    }\n  );\n  if (networkStatus === NetworkStatus.refetch) return 'Refetching!';\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error : {error.message}</p>;\n\n  const Icons = Images.map(image => image.icon);\n\n  SwiperCore.use([Pagination, Navigation]);\n\n  return (\n    <>\n      <CardsContainer>\n        <CardsTopic>\n          <CardsH1>popular tours</CardsH1>\n          <CardsArrows>\n            <ArrowButton className=\"swiper-button-prev\">\n              <IoIosArrowBack />\n            </ArrowButton>\n            <ArrowButton className=\"swiper-button-next\">\n              <IoIosArrowForward />\n            </ArrowButton>\n          </CardsArrows>\n        </CardsTopic>\n        <Swiper\n          style={{\n            'padding-bottom': '60px',\n          }}\n          slidesPerView={3}\n          spaceBetween={24}\n          pagination={{\n            clickable: true,\n            renderBullet: function (index, className) {\n              return ReactDOMServer.renderToStaticMarkup(\n                <span className={className}></span>\n              );\n            },\n          }}\n          navigation={{\n            nextEl: '.swiper-button-next',\n            prevEl: '.swiper-button-prev',\n          }}\n          modules={[Pagination, Navigation]}\n          className=\"mySwiper\"\n        >\n          {data.rockets.map(({ id, name, description }, index) => (\n            <SwiperSlide\n              key={id}\n              style={{\n                border: '1px solid #d3eaff',\n                'max-width': '411px',\n              }}\n            >\n              <CardsItemContainer>\n                <CardImg\n                  src={process.env.PUBLIC_URL + Icons[index]}\n                  alt={description}\n                />\n              </CardsItemContainer>\n              <CardTextContainer>\n                <CardName>{name}</CardName>\n                <CardText>{description}</CardText>\n              </CardTextContainer>\n              <ButtomList>\n                <CardButton\n                  type=\"button\"\n                  onClick={() => setFavorites(favorite => [...favorite, 1])}\n                >\n                  buy\n                </CardButton>\n                <HeartButtonLink\n                  id={id}\n                  index={index}\n                  name={name}\n                  description={description}\n                />\n              </ButtomList>\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      </CardsContainer>\n    </>\n  );\n};\n","import { useContext } from 'react';\nimport { CardsSctn } from './CardsSection.styled';\nimport { CardsSlider } from './CardsSlider/CardsSlider';\nimport { cardContext } from 'apollo/useContext';\n\nexport const CardsSection = ({ favorites, setFavorites }) => {\n  return (\n    <>\n      <CardsSctn id=\"hero2\">\n        <CardsSlider favorites={favorites} setFavorites={setFavorites} />\n      </CardsSctn>\n    </>\n  );\n};\n","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgArrowDown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 40,\n    viewBox: \"0 0 40 40\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.4572 32.9167V7.91667\",\n    stroke: \"white\",\n    strokeWidth: 1.2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.4978 22.8337L20.4578 32.917L10.4162 22.8337\",\n    stroke: \"white\",\n    strokeWidth: 1.2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowDown);\nexport default __webpack_public_path__ + \"static/media/ArrowDown.e5c4e12cef24294442cd9473bd2d4020.svg\";\nexport { ForwardRef as ReactComponent };","import {\r\n  ArrowButton,\r\n  ArrowImg,\r\n  ArrowDiv,\r\n  Text,\r\n  ArrowLink,\r\n} from '../HeroSaction.styled';\r\n\r\nimport arrowImg from '../../../images/icons/ArrowDown.svg';\r\n\r\nexport const ArrowToursItem = () => {\r\n  return (\r\n    <>\r\n      <ArrowDiv>\r\n        <ArrowLink smooth to=\"/#hero2\">\r\n          <ArrowButton>\r\n            <Text>explore tours</Text> <ArrowImg src={arrowImg} alt=\"\" />\r\n          </ArrowButton>\r\n        </ArrowLink>\r\n      </ArrowDiv>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\nimport { Container, List, Item, Image } from '../HeroSaction.styled';\nimport { Sp, LabelsCtrl, RadioButtonsDiv } from '../HeroSaction.styled';\n\nimport Images from '../../../apollo/Images.json';\n\nexport const SliderContent = () => {\n  const [slideIndex, setSlideIndex] = useState(1);\n\n  const moveInput = index => {\n    setSlideIndex(index);\n  };\n\n  return (\n    <>\n      <Container>\n        <List>\n          {Images.map((image, index) => (\n            <Item key={image.id} slide={slideIndex === index + 1}>\n              <Image\n                src={process.env.PUBLIC_URL + image.icon}\n                alt={image.description}\n              />\n            </Item>\n          ))}\n        </List>\n      </Container>\n      <RadioButtonsDiv>\n        <LabelsCtrl>\n          {Array.from({ length: 3 }).map((item, index) => (\n            <Sp\n              key={index}\n              className={slideIndex === index + 1 ? 'slide' : ''}\n              onClick={() => moveInput(index + 1)}\n            ></Sp>\n          ))}\n        </LabelsCtrl>\n      </RadioButtonsDiv>\n    </>\n  );\n};\n","import { Banner, BannerText, Big, H1 } from './HeroSaction.styled';\nimport { ArrowToursItem } from './SliderContent/ArrowTours';\nimport { SliderContent } from './SliderContent/SliderContent';\n\nexport const HeroBanner = ({ setFavorites }) => {\n  return (\n    <>\n      <Banner>\n        <SliderContent />\n        <BannerText>\n          <H1>\n            the space is waiting for<Big>you</Big>\n          </H1>\n        </BannerText>\n        <ArrowToursItem />\n      </Banner>\n    </>\n  );\n};\n","import { CardsSection } from 'components/CardsSection/CardsSection';\nimport { HeroBanner } from 'components/HeroBanner/HeroSection';\n\nconst HomePage = ({ favorites, setFavorites }) => {\n  return (\n    <>\n      <HeroBanner></HeroBanner>\n      <CardsSection\n        favorites={favorites}\n        setFavorites={setFavorites}\n      ></CardsSection>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["CardsContainer","styled","CardsItemContainer","CardImg","CardTextContainer","CardName","CardText","CardsTopic","CardsH1","CardsArrows","ArrowButton","ButtomList","CardButton","p","theme","colors","bottons","Banner","BannerText","H1","Big","ArrowDiv","ArrowLink","HashLink","ArrowImg","Text","List","Item","props","slide","Image","Container","RadioButtonsDiv","LabelsCtrl","Sp","CardsSctn","FavoriteLink","Link","arrows","accent","mainText","black","useLazyQuery","HeartButtonLink","id","description","name","useApolloClient","useNavigation","options","abortControllersRef","Set","execOptionsRef","mergeOptions","merged","current","internalState","client","useInternalState","_a","EAGER_METHODS","useQueryResult","useQuery","__assign","useCallback","skip","initialFetchPolicy","observable","getDefaultFetchPolicy","result","Object","assign","called","eagerMethods","useRef","key","method","create","forceUpdate","apply","arguments","_i","forEach","controller","abort","useMemo","execute","AbortController","add","useEffect","fetchPolicy","promise","asyncUpdate","signal","then","delete","queryResult","catch","GET_ROCKET","variables","rocketId","data","loading","error","useContext","cardContext","getCard","card","onClick","rocket","cartItemsVar","alt","CardsSlider","favorites","setFavorites","GET_ALL_ROCKETS","notifyOnNetworkStatusChange","refetch","networkStatus","NetworkStatus","message","Icons","Images","map","image","icon","SwiperCore","Pagination","Navigation","className","style","slidesPerView","spaceBetween","pagination","clickable","renderBullet","index","ReactDOMServer","navigation","nextEl","prevEl","modules","rockets","border","src","process","type","favorite","CardsSection","ArrowToursItem","smooth","to","arrowImg","SliderContent","useState","slideIndex","setSlideIndex","Array","from","length","item","moveInput","HeroBanner"],"sourceRoot":""}